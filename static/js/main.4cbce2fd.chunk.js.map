{"version":3,"sources":["components/BotCollection.js","components/YourBotArmy.js","components/BotSpecs.js","App.js","index.js"],"names":["BotCollection","_ref","enlistBot","showBotSpecs","enlistedBots","bots","setBots","useState","useEffect","fetch","then","response","json","data","_jsxs","className","children","_jsx","map","bot","concat","some","b","id","onClick","src","avatar_url","alt","name","health","damage","armor","bot_class","YourBotArmyContainer","setEnlistedBots","updatedList","filter","releaseBot","async","method","error","console","dischargeBot","style","color","BotSpecs","goBackToList","App","selectedBot","setSelectedBot","YourBotArmy","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.4cbce2fd.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport \"./BotCollection\"; \n\nfunction BotCollection({ enlistBot, showBotSpecs, enlistedBots }) {\n  const [bots, setBots] = useState([]);\n  useEffect(() => {\n    fetch(`https://dbserver-six.vercel.app/bots`) \n      .then(response => response.json())\n      .then(data => setBots(data));\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h2>Bot <span>Collection</span></h2>\n      <div className=\"bot-card-container\">\n        {bots.map(bot => (\n          <div className={`bot-card ${enlistedBots.some(b => b.id === bot.id) ? 'enlisted' : ''}`} key={bot.id} \n            onClick={() => showBotSpecs(bot)}>\n            <img src={bot.avatar_url} alt={bot.name} />\n            <h3>{bot.name}</h3>\n            <p>Health: {bot.health}</p>\n            <p>Damage: {bot.damage}</p>\n            <p>Armor: {bot.armor}</p>\n            <p>Class: {bot.bot_class}</p>\n            \n            {enlistedBots.some(b => b.id === bot.id) ? (\n              <p className=\"enlisted-message\">Enlisted</p>\n            ) : (\n              <button onClick={() => enlistBot(bot)}>Enlist</button>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default BotCollection;\n","import React from 'react';\nimport './YourBotArmy';\n\nfunction YourBotArmyContainer({ enlistedBots, setEnlistedBots }) {\n  const releaseBot = (bot) => {\n    const updatedList = enlistedBots.filter(b => b.id !== bot.id);\n    setEnlistedBots(updatedList);\n  };\n\n  const dischargeBot = async (bot) => {\n    try {\n      fetch(`http://localhost:8000/bots/${bot.id}`, {\n        method: 'DELETE',\n      });\n\n      const updatedList = enlistedBots.filter(b => b.id !== bot.id);\n      setEnlistedBots(updatedList);\n    } catch (error) {\n      console.error('Error discharging bot:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Your Bot Army</h2>\n      <div className=\"enlisted-bots-container\">\n        {enlistedBots.map((bot) => (\n          <div className=\"enlisted-bot\" key={bot.id}>\n            <img src={bot.avatar_url} alt={bot.name} />\n            <p>{bot.name}</p>\n            <p>Class: {bot.bot_class}</p>\n            <button onClick={() => releaseBot(bot)}>Release</button>\n            <button className=\"discharge-button\" onClick={() => dischargeBot(bot)} style={{ color: 'red' }}>x</button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default YourBotArmyContainer; ","import React from 'react';\n\nfunction BotSpecs({ bot, enlistBot, goBackToList }) {\n  return (\n    <div>\n      <h2>{bot.name} Specs</h2>\n      \n      <button onClick={() => enlistBot(bot)}>Enlist</button>\n      \n      <button onClick={() => goBackToList()}>Back to List</button>\n    </div>\n  );\n}\n\nexport default BotSpecs;\n","import React, { useState } from 'react';\nimport BotCollection from './components/BotCollection';\nimport YourBotArmy from './components/YourBotArmy';\nimport BotSpecs from './components/BotSpecs';\nimport SortBar from './components/SortBar';\n\nimport './App.css';\n\nfunction App() {\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  const [selectedBot, setSelectedBot] = useState(null);\n\n  const enlistBot = (bot) => {\n    if (!enlistedBots.some(b => b.id === bot.id)) {\n      setEnlistedBots([...enlistedBots, bot]);\n    }\n  };\n\n  const showBotSpecs = (bot) => {\n    setSelectedBot(bot);\n  };\n\n  const goBackToList = () => {\n    setSelectedBot(null);\n  };\n\n  return (\n    <div className=\"app-container\">\n    \n    <main>\n        <section className=\"bot-collection\">\n          {selectedBot ? (\n            <BotSpecs bot={selectedBot} enlistBot={enlistBot} goBackToList={goBackToList} />\n          ) : (\n            <BotCollection\n              enlistBot={enlistBot}\n              showBotSpecs={showBotSpecs}\n              enlistedBots={enlistedBots}\n            />\n          )}\n        </section>\n        <section className=\"your-bot-army\">\n          <YourBotArmy enlistedBots={enlistedBots} setEnlistedBots={setEnlistedBots} />\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}